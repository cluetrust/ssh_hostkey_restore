---

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
  tags: vars

- name: copy keys from files
  include_tasks: keys_from_files.yml
  when: vault_ssh_key_mount is not defined and ssh_use_existing_keys is not defined
  
- name: copy keys from vault
  include_tasks: keys_from_vault.yml
  when: vault_ssh_key_mount is defined and ssh_use_existing_keys is not defined

- name: remove old key types
  lineinfile:
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: absent
    regexp: "^HostKey /var/ssh/ssh_host_{{ item }}_key"
  with_items: "{{ ssh_key_algorithms_remove }}"
  when: "item not in  ssh_key_config | map(attribute='algorithm')"
  notify:
    - restart sshd

- name: remove unnecessary old lines from sshd config (reduce warnings)
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: absent
    regexp: "{{ item }}"
  with_items:
    - "^LookupClientHostnames"
    - "^VerifyReverseMapping"
    - "^MaxAuthTriesLog"
    - "^RhostsAuthentication"
    - "^RhostsRSAAuthentication"
    - "^RSAAuthentication"
    - "^ServerKeyBits"
    - "^KeyRegenerationInterval"
    - "^UsePrivilegeSeparation"
    - "^GSSAPIKeyExchange"
  notify:
    - restart sshd

- name: update sshd config to reduce the duration of bad connections and tune up algorithms
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    # stop bleeding listen resources
    - regexp: '^[#]?LoginGraceTime'
      line: "LoginGraceTime 8"
    # promptly send "Permission denied (publickey)." rather than prompting for an "it might be a token" password
    # if not given a key, since that is all we do here, ever."
    - regexp: '^[#]?ChallengeResponseAuthentication'
      line: "ChallengeResponseAuthentication no"
    #
    # default vars and narrative including source of guidance
    # can be found in ../defaults/main.yml
    # 
    - regexp: '^[#]?kexalgorithms'
      line: "kexalgorithms {{ sshd_kex_algorithms | join(',')}}"
    - regexp: ^[#]?casignaturealgorithms
      line: "casignaturealgorithms {{ sshd_ca_sig_algorithms | join(',')}}"
    - regexp: ^[#]?hostbasedacceptedkeytypes
      line: "hostbasedacceptedkeytypes {{sshd_host_based_accepted_key_algorithms| join(',')}}"
    - regexp: ^[#]?hostkeyalgorithms
      line: "hostkeyalgorithms {{ sshd_host_key_algorithms|join(',')}}"
    - regexp: ^[#]?pubkeyacceptedkeytypes
      line: "pubkeyacceptedkeytypes {{ sshd_pubkey_accepted_key_types|join(',')}}"
    - regexp: ^[#]?macs
      line: "macs {{ sshd_mac_algorithms | join(',') }}"
    # Also, put aes256-ctr first to get aes-ni speed bump
    - regexp: ^[#]?ciphers
      line: "ciphers {{ sshd_ciphers | join(',')}}"
  when: ansible_distribution != 'Debian' # and ansible_distribution != 'Ubuntu'
  notify:
    - restart sshd

- name: strip too-short keys from moduli
  ansible.builtin.shell: |
    awk '$5 >= {{ sshd_min_moduli }}' /etc/ssh/moduli > /etc/ssh/moduli.safe
    mv /etc/ssh/moduli.safe /etc/ssh/moduli
  args:
    creates: /etc/ssh/moduli.safe
  notify:
    - restart sshd
  
- name: make sure our hostkeys are enabled
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^[#]?HostKey {{ ssh_key_dir }}/{{ item.file_name }}"
    line: "HostKey {{ ssh_key_dir }}/{{ item.file_name }}"
  loop: "{{ ssh_key_config }}"

- name: sign keys
  include_tasks: sign_keys.yml
  when: vault_ssh_host_sign_path is defined

- name: run handlers to clear SSH if necessary
  meta: flush_handlers

- name: Verify that we can talk to the server
  command:
    cmd: "echo hi"
  register: result
  until: "result.rc==0 and result.stdout=='hi'"
  retries: 20
  delay: 3
  changed_when: false
 
