---

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
  tags: vars

- name: make sure machine directory and keys subdir exist
  file: path="{{ local_key_dir }}" state=directory follow=yes mode=0755
  delegate_to: localhost
  become: no

- name: Check to see if ssh_host_dsa_key exists
  stat: path="{{ local_key_dir }}/{{ item.file_name }}"
  delegate_to: localhost
  register: key_file
  with_items: "{{ ssh_key_config }}"
  ignore_errors: True
  become: no

- name: Generate ssh_host_dsa_key
  shell: ssh-keygen -f "{{ local_key_dir }}/{{ item.item.file_name }}" -C 'root@{{ inventory_hostname }}' -N '' -t {{ item.item.algorithm }}
  delegate_to: localhost
  with_items: "{{ key_file.results }}"
  when: not item.stat.exists
  become: no

- name: Copy SSH Host private keys
  copy: src={{ local_key_dir }}/{{ item.file_name }}
        dest={{ ssh_key_dir }}/{{ item.file_name }}
        owner=root group=root mode=0600
  with_items: "{{ ssh_key_config }}"
  notify:
    - restart sshd

- name: Copy SSH Host public keys
  copy: src={{ local_key_dir }}/{{ item.file_name }}.pub
        dest={{ ssh_key_dir }}/{{ item.file_name }}.pub
        owner=root group=root mode=0644
  with_items: "{{ ssh_key_config }}"
  notify:
    - restart sshd

- name: remove unnecessary old lines from sshd config (reduce warnings)
  lineinfile:  dest=/etc/ssh/sshd_config state=absent regexp="{{ item }}"
  with_items:
    - "^LookupClientHostnames"
    - "^VerifyReverseMapping"
    - "^MaxAuthTriesLog"
    - "^RhostsAuthentication"
    - "^RhostsRSAAuthentication"
    - "^RSAAuthentication"
    - "^ServerKeyBits"
    - "^KeyRegenerationInterval"
    - "^UsePrivilegeSeparation"
  notify:
    - restart sshd

- name: update sshd config to reduce the duration of bad connections
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    # stop bleeding listen resources
    - regexp: '^[#]?LoginGraceTime'
      line: "LoginGraceTime 8"
    # Following recommendations of https://github.com/arthepsy/ssh-audit as of 2020-10
    - regexp: '^[#]?kexalgorithms'
      line: "kexalgorithms curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256"
    - regexp: ^[#]?casignaturealgorithms
      line: casignaturealgorithms ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa
    - regexp: ^[#]?hostbasedacceptedkeytypes
      line: hostbasedacceptedkeytypes ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa
    - regexp: ^[#]?hostkeyalgorithms
      line: hostkeyalgorithms ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa
    - regexp: ^[#]?pubkeyacceptedkeytypes
      line: pubkeyacceptedkeytypes ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,rsa-sha2-512-cert-v01@openssh.com,rsa-sha2-256-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-dss-cert-v01@openssh.com,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa
    - regexp: ^[#]?macs
      line: macs umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com
    # Also, put aes256-ctr first to get aes-ni speed bump
    - regexp: ^[#]?ciphers
      line: ciphers aes256-ctr,chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com
  notify:
    - restart sshd

- name: run handlers to clear SSH if necessary
  meta: flush_handlers

- name: Verify that we can talk to the servers
  wait_for:
    host: "{{ ansible_host }}"
    port: 22
    delay: 1
    timeout: "{{ ssh_hostkey_restore_timeout }}"
    state: started
  delegate_to: "localhost"
  become: no
